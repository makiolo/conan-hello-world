project(gamedev CXX)
cmake_minimum_required(VERSION 3.8)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS ON)

include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
conan_basic_setup()

set(Boost_DEBUG 0)
find_package(Boost COMPONENTS coroutine context stacktrace_addr2line log random REQUIRED)
find_package(Curl)
find_package(SDL2)
find_package(OpenGL)
find_package(Glew)

add_definitions(-D_GNU_SOURCE)
# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -framework OpenGL")
# set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -framework OpenGL")
list(REMOVE_AT GLEW_LIBRARIES -1)
list(REMOVE_AT GLEW_LIBRARIES -1)

include_directories(${Boost_INCLUDE_DIRS})
include_directories(${Curl_INCLUDE_DIRS})
include_directories(${SDL2_INCLUDE_DIRS})
include_directories(${GLEW_INCLUDE_DIRS})
include_directories(${OPENGL_INCLUDE_DIRS})
include_directories(include/entt/src)

add_executable(example src/main.cpp)
target_link_libraries(example ${Boost_LIBRARIES} ${Curl_LIBRARIES} ${SDL2_LIBRARIES} ${OPENGL_LIBRARIES} ${GLEW_LIBRARIES} dl)
install(DIRECTORY ${CONAN_LIB_DIRS_BOOST}/ DESTINATION .)
install(DIRECTORY ${CONAN_LIB_DIRS_LIBCURL}/ DESTINATION .)
install(DIRECTORY ${CONAN_LIB_DIRS_SDL2}/ DESTINATION .)
install(TARGETS example DESTINATION .)

